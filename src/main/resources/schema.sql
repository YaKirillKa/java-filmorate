CREATE TABLE IF NOT EXISTS app_user
(
    id       bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(100) NOT NULL,
    email    varchar(100) NOT NULL,
    login    varchar(100) NOT NULL,
    birthday date         NOT NULL
);

CREATE TABLE IF NOT EXISTS event
(
    id         bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created    timestamp DEFAULT CURRENT_TIMESTAMP,
    user_id    bigint     NOT NULL,
    event_type varchar(6) NOT NULL,
    operation  varchar(6) NOT NULL,
    entity_id  bigint     NOT NULL
);

CREATE TABLE IF NOT EXISTS film
(
    id           bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(100) NOT NULL,
    description  varchar(200),
    release_date date         NOT NULL,
    duration     integer      NOT NULL,
    mpa_id       integer
);

CREATE TABLE IF NOT EXISTS review
(
    id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     varchar(255) NOT NULL,
    is_positive boolean      NOT NULL,
    user_id     bigint       NOT NULL,
    film_id     bigint       NOT NULL
);

CREATE TABLE IF NOT EXISTS review_likes
(
    review_id bigint  NOT NULL,
    user_id   bigint  NOT NULL,
    is_like   boolean NOT NULL,
    PRIMARY KEY (user_id, review_id)
);

CREATE TABLE IF NOT EXISTS genre
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS director
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS mpa
(
    id   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_director
(
    film_id     bigint NOT NULL,
    director_id bigint NOT NULL,
    PRIMARY KEY (director_id, film_id)
);

CREATE TABLE IF NOT EXISTS film_likes
(
    user_id bigint NOT NULL,
    film_id bigint NOT NULL,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  bigint NOT NULL,
    genre_id bigint NOT NULL,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS user_friend
(
    user_id   bigint NOT NULL,
    friend_id bigint NOT NULL,
    PRIMARY KEY (user_id, friend_id)
);

ALTER TABLE user_friend
    ADD CONSTRAINT IF NOT EXISTS fk_user_to_user FOREIGN KEY (user_id) REFERENCES app_user (id) ON DELETE CASCADE;
ALTER TABLE user_friend
    ADD CONSTRAINT IF NOT EXISTS fk_user_friend_to_user FOREIGN KEY (friend_id) REFERENCES app_user (id) ON DELETE CASCADE;
ALTER TABLE film
    ADD CONSTRAINT IF NOT EXISTS fk_film_to_mpa FOREIGN KEY (mpa_id) REFERENCES mpa (id);
ALTER TABLE film_genre
    ADD CONSTRAINT IF NOT EXISTS fk_film_genre_to_film FOREIGN KEY (film_id) REFERENCES film (id) ON DELETE CASCADE;
ALTER TABLE film_genre
    ADD CONSTRAINT IF NOT EXISTS fk_film_genre_to_genre FOREIGN KEY (genre_id) REFERENCES genre (id);
ALTER TABLE film_likes
    ADD CONSTRAINT IF NOT EXISTS fk_film_likes_to_user FOREIGN KEY (user_id) REFERENCES app_user (id) ON DELETE CASCADE;
ALTER TABLE film_likes
    ADD CONSTRAINT IF NOT EXISTS fk_film_likes_to_film FOREIGN KEY (film_id) REFERENCES film (id) ON DELETE CASCADE;
ALTER TABLE review_likes
    ADD CONSTRAINT IF NOT EXISTS fk_review_likes_to_user FOREIGN KEY (user_id) REFERENCES app_user (id) ON DELETE CASCADE;
ALTER TABLE review_likes
    ADD CONSTRAINT IF NOT EXISTS fk_review_likes_to_review FOREIGN KEY (review_id) REFERENCES review (id) ON DELETE CASCADE;
ALTER TABLE film_director
    ADD CONSTRAINT IF NOT EXISTS fk_film_director_to_film FOREIGN KEY (film_id) REFERENCES film (id) ON DELETE CASCADE;
ALTER TABLE film_director
    ADD CONSTRAINT IF NOT EXISTS fk_film_director_to_director FOREIGN KEY (director_id) REFERENCES director (id) ON DELETE CASCADE;